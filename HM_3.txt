JSON
4) New-Repository name-Public-Add a README file (На сайте GitHub создаём внешний репозиторий с названием JSON)
5) Code-HTTPS-Copy (На сайте GitHub копируем ссылку на внешний репозиторий https://github.com/DIVSNAKE/JSON.git)
git clone https://github.com/DIVSNAKE/JSON.git (В Git Bash клонируем репозиторий JSON на локальный компьютер)
6) cd JSON (перешли в папку JSON локального репозитория)
vim new.json-Esc-:wq (внутри локального JSON создали файл new.json)
7) git add new.json (добавили файл new.json под гит)
8) git commit -m "create new file new.json" (закоммитили файл)
9) git push (отправили файл на внешний репозиторий)
10) vim new.json-i-написать информацию о себе-Esc-:wq (отредактировали содержание файла new.json в формате JSON)
11) git add new.json | git commit -m "add text to new.json" | git push (отправили изменения на внешний репозиторий)
12) cd JSON | vim preferences.json-Esc-:wq (перешли в папку JSON локального репозитория и создали файл preferences.json в формате JSON)
13) vim preferences.json-i-написать информацию о своих предпочтениях-Esc-:wq (в файл preferences.json добавили информацию о своих предпочтениях в формате JSON)
14) cd JSON | vim skills.json-Esc-:wq (перешли в папку JSON локального репозитория и создали файл skills.json в формате JSON)
15) git add . | git commit -m "add two files" | git push (отправили сразу 2 файла на внешний репозиторий)
16) Add file-Create new file-bug_report.json-Commit new file (На сайте GitHub создаём файл bug_report.json)
17) Commit new file (На сайте GitHub сохраняем изменения файла bug_report.json)
18) bug_report.json-Edit this file-Commit new file (На сайте GitHub модифицируем файл bug_report.json, добавляя в него баг-репорт в формате JSON)
19) Commit changes (На сайте GitHub сохраняем изменения файла bug_report.json)
20) git pull (Синхронизируем внешний и локальный репозитории JSON)

XML
21) New-Repository name-Public-Add a README file (На сайте GitHub создаём внешний репозиторий с названием XML)
22) Code-HTTPS-Copy (На сайте GitHub копируем ссылку на внешний репозиторий https://github.com/DIVSNAKE/XML.git)
cd .. (В Git Bash вышли в папку Git Hub)
git clone https://github.com/DIVSNAKE/XML.git (В Git Bash клонируем репозиторий XML на локальный компьютер)
23) cd XML (перешли в папку XML локального репозитория)
vim new.xml-Esc-:wq (внутри локального XML создали файл new.xml)
24) git add new.xml (добавили файл new.xml под гит)
25) git commit -m "create new file new.xml" (закоммитили файл)
26) git push (отправили файл на внешний репозиторий)
27) vim new.xml-i-написать информацию о себе-Esc-:wq (отредактировали содержание файла new.xml в формате XML)
28) git add new.xml | git commit -m "add text to new.xml" | git push (отправили изменения на внешний репозиторий)
29) vim preferences.xml-Esc-:wq (создали файл preferences.xml в формате XML)
30) vim preferences.xml-i-написать информацию о своих предпочтениях-Esc-:wq (в файл preferences.xml добавили информацию о своих предпочтениях в формате XML)
31) vim skills.xml-Esc-:wq (создали файл skills.xml в формате XML)
32) git add . | git commit -m "add two files" (сделали коммит в одну строку)
33) git push (отправили сразу 2 файла на внешний репозиторий)
34) Add file-Create new file-bug_report.xml-Commit new file (На сайте GitHub создаём файл bug_report.xml)
35) Commit new file (На сайте GitHub сохраняем изменения файла bug_report.xml)
36) bug_report.xml-Edit this file-Commit new file (На сайте GitHub модифицируем файл bug_report.xml, добавляя в него баг-репорт в формате XML)
37) Commit changes (На сайте GitHub сохраняем изменения файла bug_report.xml)
38) git pull (Синхронизируем внешний и локальный репозитории XML)

TXT
1) New-Repository name-Public-Add a README file (На сайте GitHub создаём внешний репозиторий с названием TXT)
2) Code-HTTPS-Copy (На сайте GitHub копируем ссылку на внешний репозиторий https://github.com/DIVSNAKE/TXT.git)
cd .. (В Git Bash вышли в папку Git Hub)
git clone https://github.com/DIVSNAKE/TXT.git (В Git Bash клонируем репозиторий XML на локальный компьютер)
3) cd TXT (перешли в папку TXT локального репозитория)
vim new.txt-Esc-:wq (внутри локального TXT создали файл new.txt)
4) git add new.txt (добавили файл new.txt под гит)
5) git commit -m "create new file new.txt" (закоммитили файл)
6) git push (отправили файл на внешний репозиторий)
7) vim new.txt-i-написать информацию о себе-Esc-:wq (отредактировали содержание файла new.txt в формате TXT)
8) git add new.txt | git commit -m "add text to new.txt" | git push (отправили изменения на внешний репозиторий)
9) vim preferences.txt-Esc-:wq (создали файл preferences.txt в формате TXT)
10) vim preferences.txt-i-написать информацию о своих предпочтениях-Esc-:wq (в файл preferences.txt добавили информацию о своих предпочтениях в формате TXT)
11) vim skills.txt-Esc-:wq (создали файл skills.txt в формате TXT)
12) git add . | git commit -m "add two files" (сделали коммит в одну строку)
13) git push (отправили сразу 2 файла на внешний репозиторий)
14) Add file-Create new file-bug_report.txt-Commit new file (На сайте GitHub создаём файл bug_report.txt)
15) Commit new file (На сайте GitHub сохраняем изменения файла bug_report.txt)
16) bug_report.txt-Edit this file-Commit new file (На сайте GitHub модифицируем файл bug_report.txt, добавляя в него баг-репорт в формате TXT)
17) Commit changes (На сайте GitHub сохраняем изменения файла bug_report.txt)
18) git pull (Синхронизируем внешний и локальный репозитории TXT)
